{
  "features": [
    {
      "id": "cli-basic",
      "category": "core",
      "tags": ["cli", "basic", "command-line", "terminal"],
      "title": {
        "en": "Basic CLI Operations",
        "zh": "基础CLI操作"
      },
      "description": {
        "en": "Core command line interface operations for starting and managing Claude Code sessions",
        "zh": "启动和管理Claude Code会话的核心命令行界面操作"
      },
      "details": {
        "en": "Claude Code provides essential CLI commands for session management, help access, and configuration. The basic `claude` command starts an interactive session, while additional flags and options provide control over the experience.",
        "zh": "Claude Code提供用于会话管理、帮助访问和配置的基本CLI命令。基本的`claude`命令启动交互式会话，而其他标志和选项提供对体验的控制。"
      },
      "examples": ["claude", "claude --help", "claude --version"],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "natural-language-coding",
      "category": "core",
      "tags": ["ai", "natural-language", "code-generation", "english"],
      "title": {
        "en": "Natural Language Code Generation",
        "zh": "自然语言代码生成"
      },
      "description": {
        "en": "Generate, modify, and understand code using plain English descriptions",
        "zh": "使用纯英文描述生成、修改和理解代码"
      },
      "details": {
        "en": "Claude Code's core strength lies in its ability to understand natural language requests and translate them into working code. Describe what you want to build in plain English, and Claude will create the implementation, handle edge cases, and ensure best practices.",
        "zh": "Claude Code的核心优势在于理解自然语言请求并将其转换为可工作的代码。用纯英语描述您想要构建的内容，Claude将创建实现、处理边缘情况并确保最佳实践。"
      },
      "examples": [
        "Create a React component for a user profile card",
        "Fix the memory leak in this function",
        "Add error handling to this API call"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "file-editing",
      "category": "core",
      "tags": ["files", "editing", "modification", "direct"],
      "title": {
        "en": "Direct File Editing",
        "zh": "直接文件编辑"
      },
      "description": {
        "en": "Claude Code can directly edit files in your codebase without requiring copy-paste",
        "zh": "Claude Code可以直接编辑代码库中的文件，无需复制粘贴"
      },
      "details": {
        "en": "Unlike chat-based AI tools, Claude Code can directly modify files in your project. It reads the current state, understands the context, and applies changes directly to your files while preserving formatting and structure.",
        "zh": "与基于聊天的AI工具不同，Claude Code可以直接修改项目中的文件。它读取当前状态，理解上下文，并直接对文件应用更改，同时保持格式和结构。"
      },
      "examples": [
        "Update this component to use TypeScript",
        "Refactor this class to use composition",
        "Add JSDoc comments to all functions"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "git-integration",
      "category": "core",
      "tags": ["git", "version-control", "commits", "branches"],
      "title": {
        "en": "Git Workflow Integration",
        "zh": "Git工作流集成"
      },
      "description": {
        "en": "Seamlessly integrate with Git workflows including commits, branches, and code reviews",
        "zh": "与Git工作流无缝集成，包括提交、分支和代码审查"
      },
      "details": {
        "en": "Claude Code understands Git workflows and can help create meaningful commits, manage branches, resolve conflicts, and prepare code for review. It follows Git best practices and can generate conventional commit messages.",
        "zh": "Claude Code理解Git工作流程，可以帮助创建有意义的提交、管理分支、解决冲突并为审查准备代码。它遵循Git最佳实践并能生成符合约定的提交信息。"
      },
      "examples": [
        "Commit these changes with a descriptive message",
        "Create a new feature branch for this work",
        "Help resolve this merge conflict"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "codebase-analysis",
      "category": "analysis",
      "tags": ["analysis", "understanding", "search", "mapping"],
      "title": {
        "en": "Codebase Analysis & Search",
        "zh": "代码库分析与搜索"
      },
      "description": {
        "en": "Instantly search and understand million-line codebases with intelligent analysis",
        "zh": "通过智能分析即时搜索和理解百万行代码库"
      },
      "details": {
        "en": "Claude Code can rapidly analyze large codebases, understanding structure, dependencies, and patterns. It can answer questions about code organization, find specific implementations, and explain complex systems in seconds.",
        "zh": "Claude Code可以快速分析大型代码库，理解结构、依赖关系和模式。它可以回答关于代码组织的问题，找到特定实现，并在几秒钟内解释复杂系统。"
      },
      "examples": [
        "Where is the user authentication handled?",
        "Find all components that use this API",
        "Explain how the payment flow works"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "slash-commands",
      "category": "interactive",
      "tags": ["commands", "slash", "shortcuts", "workflow"],
      "title": {
        "en": "Slash Command System",
        "zh": "斜杠命令系统"
      },
      "description": {
        "en": "Powerful slash commands for quick access to common development tasks",
        "zh": "强大的斜杠命令，快速访问常见开发任务"
      },
      "details": {
        "en": "Claude Code includes a comprehensive slash command system that provides shortcuts to common development workflows. Commands range from file operations to project management, making development faster and more efficient.",
        "zh": "Claude Code包含一个全面的斜杠命令系统，提供常见开发工作流程的快捷方式。命令范围从文件操作到项目管理，使开发更快、更高效。"
      },
      "examples": ["/clear", "/help", "/git", "/bug", "/permissions", "/terminal-setup", "/install-github-app", "/security-review", "/mcp", "/agents", "/statusline"],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "background-commands",
      "category": "interactive",
      "tags": ["background", "parallel", "dev-server", "logs"],
      "title": {
        "en": "Background Commands (Ctrl+b)",
        "zh": "后台命令 (Ctrl+b)"
      },
      "description": {
        "en": "Run commands in the background while Claude continues working",
        "zh": "在后台运行命令，同时Claude继续工作"
      },
      "details": {
        "en": "The background command feature allows you to run long-running processes like dev servers, log tailing, or build processes in the background while maintaining an active conversation with Claude. This enables true parallel development workflows.",
        "zh": "后台命令功能允许您在后台运行长时间运行的进程，如开发服务器、日志跟踪或构建过程，同时与Claude保持活跃对话。这实现了真正的并行开发工作流程。"
      },
      "examples": [
        "Ctrl+b npm run dev",
        "Ctrl+b tail -f logs/app.log",
        "Ctrl+b npm run build"
      ],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "status-line-customization",
      "category": "interactive",
      "tags": ["customization", "terminal", "prompt", "status"],
      "title": {
        "en": "Customizable Status Line",
        "zh": "可自定义状态行"
      },
      "description": {
        "en": "Add your terminal prompt to Claude Code with /statusline for personalized experience",
        "zh": "使用/statusline将您的终端提示符添加到Claude Code以获得个性化体验"
      },
      "details": {
        "en": "Customize Claude Code's interface to match your terminal environment. The /statusline command allows you to integrate your existing prompt configuration, maintaining consistency across your development tools.",
        "zh": "自定义Claude Code界面以匹配您的终端环境。/statusline命令允许您集成现有的提示符配置，在开发工具间保持一致性。"
      },
      "examples": ["/statusline", "Configure terminal prompt integration"],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "mention-support",
      "category": "interactive",
      "tags": ["mentions", "typeahead", "agents", "@"],
      "title": {
        "en": "@-mention Support with Typeahead",
        "zh": "@提及支持与自动补全"
      },
      "description": {
        "en": "Mention custom agents and files with @-syntax and intelligent typeahead",
        "zh": "使用@语法和智能自动补全提及自定义代理和文件"
      },
      "details": {
        "en": "@-mention functionality provides quick access to custom agents, files, and contexts within Claude Code. The typeahead system makes it easy to reference specific resources without memorizing exact names or paths.",
        "zh": "@提及功能可快速访问Claude Code中的自定义代理、文件和上下文。自动补全系统使引用特定资源变得简单，无需记住确切名称或路径。"
      },
      "examples": ["@agent-name", "@file.js", "@project/component"],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "custom-subagents",
      "category": "agents",
      "tags": ["agents", "custom", "specialized", "tasks"],
      "title": {
        "en": "Custom Sub-agents",
        "zh": "自定义子代理"
      },
      "description": {
        "en": "Create specialized AI assistants for specific tasks with /agents command",
        "zh": "使用/agents命令为特定任务创建专门的AI助手"
      },
      "details": {
        "en": "Sub-agents are specialized AI assistants that can be customized for specific domains, tasks, or workflows. Each agent has its own instructions, context windows, and tool permissions, enabling targeted expertise for complex projects.",
        "zh": "子代理是可以为特定领域、任务或工作流程定制的专门AI助手。每个代理都有自己的指令、上下文窗口和工具权限，为复杂项目提供针对性的专业知识。"
      },
      "examples": ["/agents", "Create frontend specialist agent", "Setup testing agent"],
      "version": "2025.7",
      "status": "stable"
    },
    {
      "id": "mcp-integration",
      "category": "integrations",
      "tags": ["mcp", "protocol", "servers", "tools"],
      "title": {
        "en": "Model Context Protocol (MCP)",
        "zh": "模型上下文协议 (MCP)"
      },
      "description": {
        "en": "Connect to external tools and data sources through MCP servers",
        "zh": "通过MCP服务器连接外部工具和数据源"
      },
      "details": {
        "en": "MCP is Anthropic's open standard for connecting AI assistants to external tools and data sources. Claude Code functions as both an MCP server and client, enabling connections to Google Drive, Jira, custom developer tooling, and more.",
        "zh": "MCP是Anthropic连接AI助手到外部工具和数据源的开放标准。Claude Code既是MCP服务器又是客户端，可连接Google Drive、Jira、自定义开发工具等。"
      },
      "examples": [
        "claude mcp add",
        "Connect to Google Drive docs",
        "Integrate with Jira tickets"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "multiple-models",
      "category": "integrations",
      "tags": ["models", "sonnet", "opus", "haiku", "ai"],
      "title": {
        "en": "Multiple AI Models",
        "zh": "多种AI模型"
      },
      "description": {
        "en": "Access to Claude Sonnet 4, Opus 4.1, and Haiku 3.5 models",
        "zh": "访问Claude Sonnet 4、Opus 4.1和Haiku 3.5模型"
      },
      "details": {
        "en": "Claude Code supports multiple AI models optimized for different use cases. Sonnet 4 for balanced performance, Opus 4.1 for complex reasoning, and Haiku 3.5 for speed. Choose the right model for your specific development needs.",
        "zh": "Claude Code支持针对不同用例优化的多种AI模型。Sonnet 4用于平衡性能，Opus 4.1用于复杂推理，Haiku 3.5用于速度。为您的特定开发需求选择合适的模型。"
      },
      "examples": [
        "Switch to Opus for complex refactoring",
        "Use Haiku for quick syntax fixes",
        "Sonnet for general development"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "hooks-system",
      "category": "integrations",
      "tags": ["hooks", "lifecycle", "automation", "events"],
      "title": {
        "en": "Hooks System",
        "zh": "钩子系统"
      },
      "description": {
        "en": "Shell commands that execute at various points in Claude Code's lifecycle",
        "zh": "在Claude Code生命周期各个点执行的Shell命令"
      },
      "details": {
        "en": "Claude Code hooks are shell commands that execute at various lifecycle events: PreToolUse (before tool execution), PostToolUse (after completion), Notification (when Claude sends notifications), and Stop (when Claude finishes responding). This enables custom automation and integrations.",
        "zh": "Claude Code钩子是在各种生命周期事件中执行的shell命令：PreToolUse（工具执行前）、PostToolUse（完成后）、Notification（Claude发送通知时）和Stop（Claude完成响应时）。这使得自定义自动化和集成成为可能。"
      },
      "examples": [
        "PreToolUse hook for logging",
        "PostToolUse hook for testing",
        "Notification hook for alerts"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "custom-slash-commands",
      "category": "customization",
      "tags": ["customization", "commands", "markdown", "prompts"],
      "title": {
        "en": "Custom Slash Commands",
        "zh": "自定义斜杠命令"
      },
      "description": {
        "en": "Create custom slash commands from Markdown files for repeated workflows",
        "zh": "从Markdown文件创建自定义斜杠命令用于重复工作流程"
      },
      "details": {
        "en": "Markdown files in .claude/commands/ directories automatically appear as custom slash commands. This allows teams to standardize common prompts, workflows, and procedures into reusable commands that can be shared across projects.",
        "zh": ".claude/commands/目录中的Markdown文件自动显示为自定义斜杠命令。这使团队能够将常见提示、工作流程和程序标准化为可重用的命令，可在项目间共享。"
      },
      "examples": [
        "Create /review command for code reviews",
        "Add /deploy command for deployments",
        "Setup /test command for testing workflows"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "permission-management",
      "category": "configuration",
      "tags": ["permissions", "security", "safety", "supervision"],
      "title": {
        "en": "Permission Management",
        "zh": "权限管理"
      },
      "description": {
        "en": "Control Claude's access with permission prompts and --dangerously-skip-permissions",
        "zh": "通过权限提示和--dangerously-skip-permissions控制Claude的访问权限"
      },
      "details": {
        "en": "Claude Code includes a permission system that prompts for approval before executing potentially impactful operations. For trusted environments, --dangerously-skip-permissions bypasses all permission checks for uninterrupted workflow.",
        "zh": "Claude Code包含权限系统，在执行可能有影响的操作前提示批准。对于受信任的环境，--dangerously-skip-permissions绕过所有权限检查以实现不中断的工作流程。"
      },
      "examples": [
        "claude --dangerously-skip-permissions",
        "Approve file modification request",
        "Grant network access permission"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "context-management",
      "category": "workflow",
      "tags": ["context", "memory", "clear", "session"],
      "title": {
        "en": "Context Management",
        "zh": "上下文管理"
      },
      "description": {
        "en": "Manage conversation context with /clear command and session optimization",
        "zh": "使用/clear命令和会话优化管理对话上下文"
      },
      "details": {
        "en": "During long sessions, Claude's context window can fill with irrelevant information. The /clear command resets the context window between tasks, maintaining performance and focus. Best practice is to clear context when switching between projects or features.",
        "zh": "在长会话期间，Claude的上下文窗口可能充满不相关信息。/clear命令重置任务间的上下文窗口，保持性能和专注。最佳实践是在项目或功能间切换时清除上下文。"
      },
      "examples": [
        "/clear",
        "Reset context between features",
        "Optimize session performance"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "debugging-assistance",
      "category": "workflow",
      "tags": ["debugging", "errors", "troubleshooting", "analysis"],
      "title": {
        "en": "Debugging & Error Analysis",
        "zh": "调试与错误分析"
      },
      "description": {
        "en": "Intelligent debugging assistance with error analysis and fix suggestions",
        "zh": "智能调试辅助，包括错误分析和修复建议"
      },
      "details": {
        "en": "Claude Code excels at debugging complex issues. Paste an error message or describe a bug, and it will analyze your codebase, identify the root cause, and implement fixes. It understands stack traces, runtime errors, and logical bugs across multiple languages.",
        "zh": "Claude Code擅长调试复杂问题。粘贴错误消息或描述bug，它会分析您的代码库，识别根本原因并实施修复。它理解堆栈跟踪、运行时错误和多种语言的逻辑错误。"
      },
      "examples": [
        "Fix this TypeError in my React component",
        "Debug memory leak in Node.js app",
        "Resolve merge conflict in Git"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "testing-integration",
      "category": "workflow",
      "tags": ["testing", "unit-tests", "integration", "automation"],
      "title": {
        "en": "Test Generation & Integration",
        "zh": "测试生成与集成"
      },
      "description": {
        "en": "Generate comprehensive test suites and integrate with testing frameworks",
        "zh": "生成全面的测试套件并与测试框架集成"
      },
      "details": {
        "en": "Claude Code can generate unit tests, integration tests, and end-to-end tests for your code. It understands popular testing frameworks like Jest, Pytest, RSpec, and others, creating comprehensive test coverage with realistic test cases and edge case handling.",
        "zh": "Claude Code可以为您的代码生成单元测试、集成测试和端到端测试。它理解Jest、Pytest、RSpec等流行测试框架，创建具有真实测试用例和边缘情况处理的全面测试覆盖率。"
      },
      "examples": [
        "Generate Jest tests for this component",
        "Create integration tests for API",
        "Add edge case tests for validation"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "documentation-generation",
      "category": "workflow",
      "tags": ["documentation", "readme", "api-docs", "comments"],
      "title": {
        "en": "Documentation Generation",
        "zh": "文档生成"
      },
      "description": {
        "en": "Generate README files, API documentation, and code comments automatically",
        "zh": "自动生成README文件、API文档和代码注释"
      },
      "details": {
        "en": "Claude Code can generate comprehensive documentation including README files, API documentation, JSDoc comments, and inline code documentation. It maintains consistency with your project's style and provides clear, helpful documentation that stays current with your code.",
        "zh": "Claude Code可以生成包括README文件、API文档、JSDoc注释和内联代码文档在内的全面文档。它与项目风格保持一致，提供清晰、有用且与代码保持同步的文档。"
      },
      "examples": [
        "Generate README for this project",
        "Create API documentation from code",
        "Add JSDoc comments to functions"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "refactoring-assistance",
      "category": "workflow",
      "tags": ["refactoring", "code-quality", "patterns", "cleanup"],
      "title": {
        "en": "Code Refactoring & Optimization",
        "zh": "代码重构与优化"
      },
      "description": {
        "en": "Intelligent code refactoring with pattern recognition and optimization suggestions",
        "zh": "智能代码重构，包括模式识别和优化建议"
      },
      "details": {
        "en": "Claude Code can refactor code to improve readability, performance, and maintainability. It recognizes design patterns, suggests architectural improvements, eliminates code duplication, and applies best practices while preserving functionality.",
        "zh": "Claude Code可以重构代码以提高可读性、性能和可维护性。它识别设计模式，建议架构改进，消除代码重复，在保持功能的同时应用最佳实践。"
      },
      "examples": [
        "Refactor this class to use composition",
        "Extract common functionality into utils",
        "Optimize this algorithm for performance"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "ide-integration",
      "category": "tools",
      "tags": ["ide", "vscode", "editor", "integration"],
      "title": {
        "en": "IDE Integration",
        "zh": "IDE集成"
      },
      "description": {
        "en": "Works alongside your preferred IDE and development tools without changing workflow",
        "zh": "与您首选的IDE和开发工具协同工作，无需改变工作流程"
      },
      "details": {
        "en": "Claude Code integrates seamlessly with existing development environments. It doesn't require changing your IDE or workflow - it works in your terminal alongside VS Code, IntelliJ, Vim, or any other editor you prefer.",
        "zh": "Claude Code与现有开发环境无缝集成。它不需要更改您的IDE或工作流程-它在终端中与VS Code、IntelliJ、Vim或您喜欢的任何其他编辑器一起工作。"
      },
      "examples": [
        "Use with VS Code for development",
        "Integrate with IntelliJ workflow",
        "Terminal-based Vim integration"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "unix-philosophy",
      "category": "tools",
      "tags": ["unix", "composable", "scriptable", "pipes"],
      "title": {
        "en": "Unix Philosophy & Composability",
        "zh": "Unix哲学与可组合性"
      },
      "description": {
        "en": "Composable and scriptable following Unix philosophy for integration with existing tools",
        "zh": "遵循Unix哲学的可组合和可脚本化，与现有工具集成"
      },
      "details": {
        "en": "Claude Code follows Unix philosophy principles: it's composable, scriptable, and works well with other tools. You can pipe data to and from Claude Code, integrate it into shell scripts, and combine it with existing development tools.",
        "zh": "Claude Code遵循Unix哲学原则：它是可组合的、可脚本化的，并与其他工具良好配合。您可以将数据输入和输出Claude Code，将其集成到shell脚本中，并与现有开发工具结合使用。"
      },
      "examples": [
        "cat file.js | claude analyze",
        "claude generate | tee output.js",
        "Integrate into build scripts"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "project-initialization",
      "category": "tools",
      "tags": ["initialization", "scaffolding", "templates", "setup"],
      "title": {
        "en": "Project Initialization & Scaffolding",
        "zh": "项目初始化与脚手架"
      },
      "description": {
        "en": "Bootstrap new projects with proper structure, dependencies, and best practices",
        "zh": "使用适当的结构、依赖项和最佳实践引导新项目"
      },
      "details": {
        "en": "Claude Code can initialize new projects with proper directory structure, configuration files, dependencies, and boilerplate code. It understands modern project templates and can customize setup based on your specific requirements and preferences.",
        "zh": "Claude Code可以使用适当的目录结构、配置文件、依赖项和样板代码初始化新项目。它理解现代项目模板，可以根据您的具体要求和偏好定制设置。"
      },
      "examples": [
        "Initialize React TypeScript project",
        "Setup Node.js API with Express",
        "Create Python package structure"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "performance-optimization",
      "category": "optimization",
      "tags": ["performance", "optimization", "profiling", "analysis"],
      "title": {
        "en": "Performance Analysis & Optimization",
        "zh": "性能分析与优化"
      },
      "description": {
        "en": "Analyze and optimize code performance with intelligent profiling suggestions",
        "zh": "通过智能性能分析建议分析和优化代码性能"
      },
      "details": {
        "en": "Claude Code can analyze your code for performance bottlenecks, suggest optimizations, and help implement more efficient algorithms. It understands time complexity, memory usage patterns, and platform-specific optimization techniques.",
        "zh": "Claude Code可以分析代码中的性能瓶颈，建议优化方案，并帮助实现更高效的算法。它理解时间复杂度、内存使用模式和平台特定的优化技术。"
      },
      "examples": [
        "Optimize this slow database query",
        "Reduce bundle size in React app",
        "Fix memory leaks in long-running process"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "security-analysis",
      "category": "optimization",
      "tags": ["security", "vulnerabilities", "audit", "best-practices"],
      "title": {
        "en": "Security Analysis & Hardening",
        "zh": "安全分析与强化"
      },
      "description": {
        "en": "Identify security vulnerabilities and implement security best practices",
        "zh": "识别安全漏洞并实施安全最佳实践"
      },
      "details": {
        "en": "Claude Code can audit your code for common security vulnerabilities, suggest secure coding practices, and help implement security measures. It understands OWASP top 10 vulnerabilities, authentication patterns, and platform-specific security considerations.",
        "zh": "Claude Code可以审核您的代码以查找常见安全漏洞，建议安全编码实践，并帮助实施安全措施。它理解OWASP十大漏洞、身份验证模式和平台特定的安全注意事项。"
      },
      "examples": [
        "Audit this API for security issues",
        "Implement secure authentication",
        "Fix SQL injection vulnerability"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "dependency-management",
      "category": "configuration",
      "tags": ["dependencies", "packages", "updates", "management"],
      "title": {
        "en": "Dependency Management",
        "zh": "依赖管理"
      },
      "description": {
        "en": "Manage project dependencies, updates, and compatibility issues intelligently",
        "zh": "智能管理项目依赖、更新和兼容性问题"
      },
      "details": {
        "en": "Claude Code helps manage project dependencies by suggesting appropriate packages, handling version conflicts, managing updates, and ensuring compatibility. It understands package ecosystems like npm, PyPI, Cargo, and others.",
        "zh": "Claude Code通过建议适当的包、处理版本冲突、管理更新和确保兼容性来帮助管理项目依赖。它理解npm、PyPI、Cargo等包生态系统。"
      },
      "examples": [
        "Update dependencies safely",
        "Resolve version conflicts",
        "Find alternative to deprecated package"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "environment-configuration",
      "category": "configuration",
      "tags": ["environment", "config", "setup", "variables"],
      "title": {
        "en": "Environment Configuration",
        "zh": "环境配置"
      },
      "description": {
        "en": "Setup and manage development environments, configurations, and environment variables",
        "zh": "设置和管理开发环境、配置和环境变量"
      },
      "details": {
        "en": "Claude Code can help configure development environments, manage environment variables, setup configuration files, and ensure consistent environments across development, staging, and production. It understands Docker, environment files, and deployment configurations.",
        "zh": "Claude Code可以帮助配置开发环境、管理环境变量、设置配置文件，并确保开发、测试和生产环境的一致性。它理解Docker、环境文件和部署配置。"
      },
      "examples": [
        "Setup Docker development environment",
        "Configure environment variables",
        "Create consistent dev/prod configs"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "cloud-deployment",
      "category": "deployment",
      "tags": ["deployment", "cloud", "ci-cd", "automation"],
      "title": {
        "en": "Cloud Deployment & CI/CD",
        "zh": "云部署与CI/CD"
      },
      "description": {
        "en": "Setup deployment pipelines for AWS, Azure, GCP, and other cloud platforms",
        "zh": "为AWS、Azure、GCP和其他云平台设置部署管道"
      },
      "details": {
        "en": "Claude Code can help setup deployment pipelines, configure CI/CD workflows, and deploy applications to cloud platforms. It understands GitHub Actions, GitLab CI, AWS, Azure, GCP, and other deployment platforms and best practices.",
        "zh": "Claude Code可以帮助设置部署管道、配置CI/CD工作流程，并将应用程序部署到云平台。它理解GitHub Actions、GitLab CI、AWS、Azure、GCP和其他部署平台及最佳实践。"
      },
      "examples": [
        "Setup GitHub Actions for deployment",
        "Deploy to AWS Lambda",
        "Configure Docker containerization"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "database-operations",
      "category": "deployment",
      "tags": ["database", "migrations", "queries", "optimization"],
      "title": {
        "en": "Database Operations & Migrations",
        "zh": "数据库操作与迁移"
      },
      "description": {
        "en": "Design schemas, write queries, and manage database migrations safely",
        "zh": "设计模式、编写查询并安全管理数据库迁移"
      },
      "details": {
        "en": "Claude Code can help design database schemas, write efficient queries, create migrations, and optimize database performance. It understands SQL, NoSQL databases, ORM patterns, and database best practices for various platforms.",
        "zh": "Claude Code可以帮助设计数据库模式、编写高效查询、创建迁移并优化数据库性能。它理解SQL、NoSQL数据库、ORM模式以及各种平台的数据库最佳实践。"
      },
      "examples": [
        "Design user authentication schema",
        "Optimize slow database queries",
        "Create safe migration scripts"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "api-development",
      "category": "development",
      "tags": ["api", "rest", "graphql", "endpoints"],
      "title": {
        "en": "API Development & Documentation",
        "zh": "API开发与文档"
      },
      "description": {
        "en": "Build REST and GraphQL APIs with automatic documentation generation",
        "zh": "构建REST和GraphQL API，自动生成文档"
      },
      "details": {
        "en": "Claude Code excels at API development, creating well-structured endpoints, implementing proper error handling, authentication, and generating comprehensive API documentation. It understands REST principles, GraphQL schemas, and API best practices.",
        "zh": "Claude Code擅长API开发，创建结构良好的端点、实现适当的错误处理、身份验证，并生成全面的API文档。它理解REST原则、GraphQL模式和API最佳实践。"
      },
      "examples": [
        "Create REST API for user management",
        "Build GraphQL schema with resolvers",
        "Generate OpenAPI documentation"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "frontend-frameworks",
      "category": "development",
      "tags": ["react", "vue", "angular", "frontend"],
      "title": {
        "en": "Frontend Framework Support",
        "zh": "前端框架支持"
      },
      "description": {
        "en": "Expert support for React, Vue, Angular, and other modern frontend frameworks",
        "zh": "对React、Vue、Angular和其他现代前端框架的专家支持"
      },
      "details": {
        "en": "Claude Code has deep knowledge of modern frontend frameworks including React, Vue, Angular, Svelte, and others. It can create components, manage state, handle routing, optimize performance, and follow framework-specific best practices.",
        "zh": "Claude Code对包括React、Vue、Angular、Svelte等现代前端框架有深入了解。它可以创建组件、管理状态、处理路由、优化性能，并遵循特定框架的最佳实践。"
      },
      "examples": [
        "Create React component with hooks",
        "Build Vue 3 composition API feature",
        "Setup Angular service with RxJS"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "code-reviews",
      "category": "collaboration",
      "tags": ["review", "pull-request", "quality", "feedback"],
      "title": {
        "en": "Code Review Assistance",
        "zh": "代码审查辅助"
      },
      "description": {
        "en": "Intelligent code review with suggestions for improvements and best practices",
        "zh": "智能代码审查，提供改进建议和最佳实践"
      },
      "details": {
        "en": "Claude Code can review code changes, identify potential issues, suggest improvements, and ensure adherence to best practices. It can analyze pull requests, provide constructive feedback, and help maintain code quality standards across teams.",
        "zh": "Claude Code可以审查代码更改、识别潜在问题、建议改进，并确保遵循最佳实践。它可以分析拉取请求、提供建设性反馈，并帮助团队维护代码质量标准。"
      },
      "examples": [
        "Review this pull request for issues",
        "Suggest improvements for code quality",
        "Check adherence to coding standards"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "team-collaboration",
      "category": "collaboration",
      "tags": ["team", "sharing", "standards", "conventions"],
      "title": {
        "en": "Team Collaboration Features",
        "zh": "团队协作功能"
      },
      "description": {
        "en": "Share commands, conventions, and workflows across development teams",
        "zh": "在开发团队间共享命令、约定和工作流程"
      },
      "details": {
        "en": "Claude Code supports team collaboration through shared custom commands, coding conventions, and standardized workflows. Teams can create shared .claude/commands/ directories to ensure consistent processes and practices across projects.",
        "zh": "Claude Code通过共享自定义命令、编码约定和标准化工作流程支持团队协作。团队可以创建共享的.claude/commands/目录，以确保项目间流程和实践的一致性。"
      },
      "examples": [
        "Share team coding standards",
        "Create shared workflow commands",
        "Standardize review processes"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "enterprise-integration",
      "category": "enterprise",
      "tags": ["enterprise", "bedrock", "vertex", "corporate"],
      "title": {
        "en": "Enterprise Cloud Integration",
        "zh": "企业云集成"
      },
      "description": {
        "en": "Integration with Amazon Bedrock and Google Cloud Vertex AI for enterprise users",
        "zh": "为企业用户集成Amazon Bedrock和Google Cloud Vertex AI"
      },
      "details": {
        "en": "Enterprise users can run Claude Code using models in existing Amazon Bedrock or Google Cloud Vertex AI instances. This provides enterprise-grade security, compliance, and control while maintaining all Claude Code functionality.",
        "zh": "企业用户可以使用现有Amazon Bedrock或Google Cloud Vertex AI实例中的模型运行Claude Code。这提供企业级安全性、合规性和控制，同时保持所有Claude Code功能。"
      },
      "examples": [
        "Configure Bedrock integration",
        "Setup Vertex AI connection",
        "Enterprise model deployment"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "cross-platform-support",
      "category": "platform",
      "tags": ["cross-platform", "macos", "linux", "windows"],
      "title": {
        "en": "Cross-Platform Support",
        "zh": "跨平台支持"
      },
      "description": {
        "en": "Native support for macOS, Linux, and Windows development environments",
        "zh": "对macOS、Linux和Windows开发环境的原生支持"
      },
      "details": {
        "en": "Claude Code works natively on macOS, Linux, and Windows, adapting to platform-specific conventions, file paths, and development tools. It understands platform differences and provides appropriate solutions for each environment.",
        "zh": "Claude Code在macOS、Linux和Windows上原生工作，适应平台特定的约定、文件路径和开发工具。它理解平台差异并为每个环境提供适当的解决方案。"
      },
      "examples": [
        "Windows PowerShell integration",
        "Linux shell scripting",
        "macOS development tools"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "language-support",
      "category": "platform",
      "tags": ["languages", "python", "javascript", "typescript", "rust", "go"],
      "title": {
        "en": "Multi-Language Support",
        "zh": "多语言支持"
      },
      "description": {
        "en": "Expert support for 20+ programming languages with best practices",
        "zh": "对20多种编程语言的专家支持和最佳实践"
      },
      "details": {
        "en": "Claude Code has deep knowledge of popular programming languages including Python, JavaScript, TypeScript, Rust, Go, Java, C++, and many others. It understands language-specific idioms, best practices, and ecosystem conventions.",
        "zh": "Claude Code对包括Python、JavaScript、TypeScript、Rust、Go、Java、C++等流行编程语言有深入了解。它理解特定语言的习语、最佳实践和生态系统约定。"
      },
      "examples": [
        "Python async/await patterns",
        "Rust ownership and borrowing",
        "Go concurrent programming"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "github-actions-integration",
      "category": "integrations",
      "tags": ["github", "actions", "ci-cd", "automation", "pr"],
      "title": {
        "en": "GitHub Actions Integration",
        "zh": "GitHub Actions集成"
      },
      "description": {
        "en": "Native GitHub integration with automated PR reviews and CI/CD workflows",
        "zh": "与自动PR审查和CI/CD工作流程的原生GitHub集成"
      },
      "details": {
        "en": "Claude Code now supports background tasks via GitHub Actions. With a simple @claude mention in any PR or issue, Claude can analyze code, create pull requests, implement features, and fix bugs while following your project's standards.",
        "zh": "Claude Code现在通过GitHub Actions支持后台任务。在任何PR或issue中简单地@claude提及，Claude可以分析代码、创建拉取请求、实现功能和修复bug，同时遵循您项目的标准。"
      },
      "examples": [
        "@claude review this PR for security issues",
        "@claude implement feature from issue #123",
        "@claude fix the failing tests"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "security-review-command",
      "category": "workflow",
      "tags": ["security", "review", "automation", "vulnerabilities"],
      "title": {
        "en": "Automated Security Reviews",
        "zh": "自动化安全审查"
      },
      "description": {
        "en": "New /security-review command for automated vulnerability detection and fixing",
        "zh": "新的/security-review命令用于自动漏洞检测和修复"
      },
      "details": {
        "en": "Using GitHub Actions integration and the /security-review command, developers can easily ask Claude to identify security concerns and automatically fix them. This includes OWASP top 10 vulnerabilities and platform-specific security issues.",
        "zh": "使用GitHub Actions集成和/security-review命令，开发者可以轻松要求Claude识别安全问题并自动修复。这包括OWASP十大漏洞和平台特定的安全问题。"
      },
      "examples": [
        "/security-review",
        "Audit codebase for SQL injection",
        "Fix authentication vulnerabilities"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "install-github-app",
      "category": "integrations",
      "tags": ["github", "installation", "app", "setup"],
      "title": {
        "en": "GitHub App Installation",
        "zh": "GitHub应用安装"
      },
      "description": {
        "en": "Simple /install-github-app command to set up GitHub integration",
        "zh": "简单的/install-github-app命令设置GitHub集成"
      },
      "details": {
        "en": "The /install-github-app command guides you through setting up the GitHub app and required secrets for seamless GitHub integration. This enables PR reviews, issue management, and automated workflows.",
        "zh": "/install-github-app命令指导您设置GitHub应用和所需的密钥，以实现无缝的GitHub集成。这启用了PR审查、问题管理和自动化工作流程。"
      },
      "examples": [
        "/install-github-app",
        "Setup GitHub integration for team",
        "Configure automated PR reviews"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "claude-code-sdk",
      "category": "development",
      "tags": ["sdk", "typescript", "python", "extensibility"],
      "title": {
        "en": "Claude Code SDK",
        "zh": "Claude Code SDK"
      },
      "description": {
        "en": "Extensible SDK in TypeScript and Python for building custom agents and applications",
        "zh": "TypeScript和Python中的可扩展SDK，用于构建自定义代理和应用程序"
      },
      "details": {
        "en": "The Claude Code SDK is available in TypeScript and Python, allowing developers to build their own agents and applications using the same core agent as Claude Code. This enables custom integrations and specialized workflows.",
        "zh": "Claude Code SDK在TypeScript和Python中可用，允许开发者使用与Claude Code相同的核心代理构建自己的代理和应用程序。这使得自定义集成和专门的工作流程成为可能。"
      },
      "examples": [
        "Build custom code analysis agent",
        "Create specialized deployment tool",
        "Integrate with internal systems"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "mcp-sse-http",
      "category": "integrations",
      "tags": ["mcp", "sse", "http", "oauth", "real-time"],
      "title": {
        "en": "Enhanced MCP Support",
        "zh": "增强的MCP支持"
      },
      "description": {
        "en": "SSE and HTTP transports for MCP with OAuth 2.0 authentication",
        "zh": "具有OAuth 2.0身份验证的MCP的SSE和HTTP传输"
      },
      "details": {
        "en": "Claude Code now supports SSE and HTTP transports for MCP servers, enabling real-time communication. Use /mcp command to authenticate with remote MCP servers via OAuth 2.0. Reference MCP resources with @server:protocol://path format.",
        "zh": "Claude Code现在支持MCP服务器的SSE和HTTP传输，启用实时通信。使用/mcp命令通过OAuth 2.0与远程MCP服务器进行身份验证。使用@server:protocol://path格式引用MCP资源。"
      },
      "examples": [
        "/mcp add server-name",
        "@github:api/repos/owner/repo",
        "OAuth integration with external services"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "claude-on-github",
      "category": "integrations",
      "tags": ["github", "beta", "web", "browser"],
      "title": {
        "en": "Claude Code on GitHub (Beta)",
        "zh": "GitHub上的Claude Code（Beta）"
      },
      "description": {
        "en": "Browser-based Claude Code experience directly on GitHub",
        "zh": "直接在GitHub上基于浏览器的Claude Code体验"
      },
      "details": {
        "en": "Claude Code on GitHub brings the power of Claude Code directly to the GitHub web interface. This beta feature allows developers to use Claude Code functionality without leaving their browser, enabling seamless code review and development workflows.",
        "zh": "GitHub上的Claude Code将Claude Code的功能直接带到GitHub网页界面。这个beta功能允许开发者在不离开浏览器的情况下使用Claude Code功能，实现无缝的代码审查和开发工作流程。"
      },
      "examples": [
        "Review PRs directly in browser",
        "Generate code from GitHub issues",
        "Inline code suggestions"
      ],
      "version": "2025.1",
      "status": "beta"
    },
    {
      "id": "pro-max-plans",
      "category": "platform",
      "tags": ["plans", "pro", "max", "access"],
      "title": {
        "en": "Pro and Max Plan Access",
        "zh": "Pro和Max计划访问"
      },
      "description": {
        "en": "Claude Code now available on both Pro and Max subscription plans",
        "zh": "Claude Code现在在Pro和Max订阅计划中都可用"
      },
      "details": {
        "en": "Claude Code is now accessible with both the Pro and Max plans, making it available to a broader range of developers and teams. Each plan offers different usage limits and capabilities tailored to different development needs.",
        "zh": "Claude Code现在可通过Pro和Max计划访问，使更广泛的开发者和团队能够使用它。每个计划提供不同的使用限制和针对不同开发需求的功能。"
      },
      "examples": [
        "Pro plan for individual developers",
        "Max plan for teams and heavy usage",
        "Flexible pricing options"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "dangerously-skip-permissions",
      "category": "configuration",
      "tags": ["permissions", "automation", "yolo", "trusted"],
      "title": {
        "en": "Skip Permissions Mode",
        "zh": "跳过权限模式"
      },
      "description": {
        "en": "--dangerously-skip-permissions flag for uninterrupted automation",
        "zh": "用于不间断自动化的--dangerously-skip-permissions标志"
      },
      "details": {
        "en": "Many users run claude --dangerously-skip-permissions which functions like Cursor's old yolo mode, allowing Claude to execute commands without asking for permission each time. This is useful for trusted environments and automated workflows.",
        "zh": "许多用户运行claude --dangerously-skip-permissions，它像Cursor的旧yolo模式一样工作，允许Claude执行命令而无需每次都请求权限。这对于受信任的环境和自动化工作流程很有用。"
      },
      "examples": [
        "claude --dangerously-skip-permissions",
        "Automated CI/CD workflows",
        "Trusted development environments"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "hierarchical-claude-md",
      "category": "configuration",
      "tags": ["configuration", "claude-md", "hierarchical", "project"],
      "title": {
        "en": "Hierarchical Configuration",
        "zh": "分层配置"
      },
      "description": {
        "en": "Hierarchical CLAUDE.md files with project-level and nested directory support",
        "zh": "具有项目级和嵌套目录支持的分层CLAUDE.md文件"
      },
      "details": {
        "en": "CLAUDE.md files can be hierarchical - you can have project-level configuration and nested directory-specific configs. Claude looks at all relevant configs and prioritizes the most specific, nested one when applicable. Save to global user memory or local project memory.",
        "zh": "CLAUDE.md文件可以是分层的——您可以有项目级配置和嵌套的目录特定配置。Claude查看所有相关配置，并在适用时优先考虑最具体的嵌套配置。保存到全局用户内存或本地项目内存。"
      },
      "examples": [
        "Global ~/.claude/CLAUDE.md",
        "Project-level ./CLAUDE.md",
        "Directory-specific nested configs"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "terminal-keyboard-shortcuts",
      "category": "interactive",
      "tags": ["terminal", "shortcuts", "navigation", "ux"],
      "title": {
        "en": "Advanced Terminal Controls",
        "zh": "高级终端控制"
      },
      "description": {
        "en": "Keyboard shortcuts and terminal behaviors for efficient interaction",
        "zh": "用于高效交互的键盘快捷键和终端行为"
      },
      "details": {
        "en": "Claude Code includes several non-obvious terminal behaviors: Escape to stop Claude (not Ctrl+C), Escape twice to show message history, Shift+drag for file references, Ctrl+V for image pasting, and /terminal-setup for proper configuration.",
        "zh": "Claude Code包含几个不明显的终端行为：Escape停止Claude（不是Ctrl+C），Escape两次显示消息历史，Shift+拖拽文件引用，Ctrl+V粘贴图像，/terminal-setup进行适当配置。"
      },
      "examples": [
        "Escape - Stop Claude execution",
        "Escape Escape - View message history",
        "Shift+drag - Reference files properly",
        "Ctrl+V - Paste images from clipboard"
      ],
      "version": "2025.1",
      "status": "stable"
    },
    {
      "id": "awesome-claude-code-collection",
      "category": "community",
      "tags": ["community", "templates", "commands", "workflows", "examples"],
      "title": {
        "en": "Awesome Claude Code Collection",
        "zh": "Claude Code精选资源集合"
      },
      "description": {
        "en": "Community-curated collection of commands, files, and workflows for Claude Code",
        "zh": "社区策划的Claude Code命令、文件和工作流程集合"
      },
      "details": {
        "en": "The Awesome Claude Code repository provides a comprehensive collection of community-contributed resources including custom slash commands, workflow templates, configuration examples, and best practices. This collection helps developers get the most out of Claude Code with ready-to-use solutions.",
        "zh": "Awesome Claude Code仓库提供了社区贡献的全面资源集合，包括自定义斜杠命令、工作流模板、配置示例和最佳实践。这个集合帮助开发者通过即用的解决方案最大化利用Claude Code。"
      },
      "examples": [
        "Browse curated command collections",
        "Download workflow templates",
        "Share custom configurations"
      ],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "claude-code-templates",
      "category": "customization",
      "tags": ["templates", "agents", "configurations", "mcps", "workflows"],
      "title": {
        "en": "Claude Code Templates & Configurations",
        "zh": "Claude Code模板与配置"
      },
      "description": {
        "en": "100+ ready-to-use agents, commands, settings, hooks, and MCPs for enhanced development workflow",
        "zh": "100多个即用的代理、命令、设置、钩子和MCP，增强开发工作流程"
      },
      "details": {
        "en": "A comprehensive collection of AI agents, custom commands, settings, hooks, external integrations (MCPs), and project templates to enhance your development workflow. Features an interactive web interface to explore and install templates, covering everything from debugging loops to log analysis and deployment automation.",
        "zh": "全面的AI代理、自定义命令、设置、钩子、外部集成(MCP)和项目模板集合，增强您的开发工作流程。提供交互式网页界面来探索和安装模板，涵盖从调试循环到日志分析和部署自动化的一切。"
      },
      "examples": [
        "Install debugging workflow templates",
        "Setup automated deployment agents",
        "Configure log analysis hooks"
      ],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "github-issue-automation",
      "category": "workflow",
      "tags": ["github", "issues", "automation", "custom-commands", "workflow"],
      "title": {
        "en": "GitHub Issue Automation",
        "zh": "GitHub问题自动化"
      },
      "description": {
        "en": "Automate GitHub issue handling with custom slash commands for pulling and fixing issues",
        "zh": "使用自定义斜杠命令自动化GitHub问题处理，拉取和修复问题"
      },
      "details": {
        "en": "Create custom slash commands to automatically pull and fix GitHub issues. Store prompt templates in .claude/commands folder to make them available through the slash commands menu. Example: create /project:fix-github-issue.md to enable '/project:fix-github-issue 1234' command for automatically fixing issue #1234.",
        "zh": "创建自定义斜杠命令自动拉取和修复GitHub问题。将提示模板存储在.claude/commands文件夹中，通过斜杠命令菜单使其可用。例如：创建/project:fix-github-issue.md以启用'/project:fix-github-issue 1234'命令自动修复问题#1234。"
      },
      "examples": [
        "/project:fix-github-issue 1234",
        "Create .claude/commands/fix-github-issue.md",
        "Automate issue resolution workflow"
      ],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "claude-code-best-practices",
      "category": "workflow",
      "tags": ["best-practices", "optimization", "clear", "context", "efficiency"],
      "title": {
        "en": "Claude Code Best Practices",
        "zh": "Claude Code最佳实践"
      },
      "description": {
        "en": "Official best practices and optimization tips for maximizing Claude Code effectiveness",
        "zh": "最大化Claude Code效果的官方最佳实践和优化技巧"
      },
      "details": {
        "en": "Essential best practices including frequent use of /clear command to manage context, token optimization, and workflow efficiency. Pro tip: use /clear often - every time you start something new, clear the chat to avoid wasting tokens on irrelevant history and prevent Claude from running expensive compaction calls.",
        "zh": "基本最佳实践包括频繁使用/clear命令管理上下文、令牌优化和工作流程效率。专业提示：经常使用/clear - 每次开始新任务时清除聊天，避免在无关历史上浪费令牌，防止Claude运行昂贵的压缩调用。"
      },
      "examples": [
        "Use /clear between different tasks",
        "Optimize token usage patterns",
        "Implement efficient workflow practices"
      ],
      "version": "2025.8",
      "status": "stable"
    },
    {
      "id": "complete-finance-tracker-tutorial",
      "category": "tutorial",
      "tags": ["tutorial", "finance", "web-app", "complete-guide", "hands-on"],
      "title": {
        "en": "Complete Finance Tracker Tutorial",
        "zh": "完整财务跟踪器教程"
      },
      "description": {
        "en": "Comprehensive tutorial building a complete personal finance tracker web app with Claude Code",
        "zh": "使用Claude Code构建完整个人财务跟踪器网页应用的综合教程"
      },
      "details": {
        "en": "A complete hands-on tutorial that teaches Claude Code usage by building a full personal finance tracker web application. This tutorial covers all major features, usage patterns, tips and tricks for getting the most out of Claude Code, from initial setup to deployment.",
        "zh": "通过构建完整的个人财务跟踪器网页应用来教授Claude Code使用的完整实践教程。该教程涵盖所有主要功能、使用模式、技巧和窍门，从初始设置到部署。"
      },
      "examples": [
        "Build complete web application from scratch",
        "Learn all Claude Code features through practice",
        "Implement real-world project workflows"
      ],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "claude-code-guide-comprehensive",
      "category": "documentation",
      "tags": ["guide", "commands", "hidden-features", "comprehensive", "reference"],
      "title": {
        "en": "Comprehensive Claude Code Command Guide",
        "zh": "Claude Code命令综合指南"
      },
      "description": {
        "en": "Most complete Claude Code command reference including hidden and undocumented features",
        "zh": "最完整的Claude Code命令参考，包括隐藏和未记录的功能"
      },
      "details": {
        "en": "This guide covers every discoverable Claude Code command as of August 2025, including many features that are not widely known or documented in basic tutorials. Represents the most complete Claude Code command reference available, with tips and tricks for advanced usage.",
        "zh": "该指南涵盖了截至2025年8月所有可发现的Claude Code命令，包括许多在基础教程中不为人知或未记录的功能。代表了最完整的Claude Code命令参考，包含高级使用的技巧和窍门。"
      },
      "examples": [
        "Discover hidden commands and features",
        "Access complete command reference",
        "Learn advanced usage patterns"
      ],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "awesome-subagents-collection",
      "category": "agents",
      "tags": ["subagents", "collection", "specialized", "community", "awesome"],
      "title": {
        "en": "Awesome Claude Code Sub-agents Collection",
        "zh": "Claude Code子代理精选集合"
      },
      "description": {
        "en": "Comprehensive collection of 100+ specialized AI sub-agents for full-stack development, DevOps, and business operations",
        "zh": "包含100多个专业化AI子代理的综合集合，涵盖全栈开发、DevOps和业务运营"
      },
      "details": {
        "en": "The VoltAgent/awesome-claude-code-subagents project provides production-ready sub-agents with independent context windows, domain-specific intelligence, and fine-grained tool permissions. Each sub-agent is crafted with industry best practices for specific development domains.",
        "zh": "VoltAgent/awesome-claude-code-subagents项目提供生产就绪的子代理，具有独立的上下文窗口、领域特定智能和精细的工具权限。每个子代理都采用行业最佳实践，针对特定开发领域精心制作。"
      },
      "examples": [
        "Create ~/.claude/agents/frontend-developer.md",
        "Use python-pro for modern Python development",
        "Deploy with devops-engineer sub-agent"
      ],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "frontend-developer-subagent",
      "category": "agents",
      "tags": ["frontend", "react", "vue", "angular", "ui", "responsive", "accessibility"],
      "title": {
        "en": "Frontend Developer Sub-agent",
        "zh": "前端开发子代理"
      },
      "description": {
        "en": "UI/UX specialist for React, Vue, Angular with focus on responsive, accessible, high-performance user experiences",
        "zh": "React、Vue、Angular的UI/UX专家，专注于响应式、无障碍、高性能的用户体验"
      },
      "details": {
        "en": "Master of modern web interfaces specializing in component architecture, state management, and modern CSS. Delivers WCAG 2.1 AA compliance, 90% test coverage, and sub-3s load times on 3G networks. Focuses on user experience first, accessibility by default, and performance consciousness.",
        "zh": "现代Web界面大师，专攻组件架构、状态管理和现代CSS。确保WCAG 2.1 AA合规性、90%测试覆盖率，在3G网络下实现3秒以下加载时间。以用户体验为先，默认无障碍性，注重性能。"
      },
      "examples": [
        "Create responsive dashboard with React hooks",
        "Implement WCAG-compliant form components",
        "Optimize bundle size and loading performance"
      ],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "backend-developer-subagent",
      "category": "agents",
      "tags": ["backend", "api", "microservices", "database", "scalability", "performance"],
      "title": {
        "en": "Backend Developer Sub-agent",
        "zh": "后端开发子代理"
      },
      "description": {
        "en": "Server-side specialist for scalable APIs, microservices, database design, and system architecture",
        "zh": "服务端专家，专长可扩展API、微服务、数据库设计和系统架构"
      },
      "details": {
        "en": "Expert in RESTful APIs, microservices architecture, database optimization, authentication systems, and performance tuning. Supports Node.js 18+, Python 3.11+, and Go 1.21+. Delivers 99.9% uptime, sub-200ms response times, and secure-by-default implementations.",
        "zh": "RESTful API、微服务架构、数据库优化、认证系统和性能调优专家。支持Node.js 18+、Python 3.11+和Go 1.21+。实现99.9%正常运行时间、200毫秒以下响应时间和默认安全的实现。"
      },
      "examples": [
        "Design RESTful API with JWT authentication",
        "Implement microservices with Docker",
        "Optimize database queries for performance"
      ],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "python-pro-subagent",
      "category": "agents",
      "tags": ["python", "async", "typing", "data-science", "modern"],
      "title": {
        "en": "Python Pro Sub-agent",
        "zh": "Python专业子代理"
      },
      "description": {
        "en": "Modern Python 3.11+ development expert focusing on type safety, async programming, and data science",
        "zh": "现代Python 3.11+开发专家，专注类型安全、异步编程和数据科学"
      },
      "details": {
        "en": "Deep expertise in modern Python development with 100% type coverage, 95% test coverage, and sub-50ms p95 response times. Specializes in async/await patterns, Pydantic validation, SQLAlchemy async ORM, and scientific computing with NumPy/Pandas.",
        "zh": "现代Python开发深度专业知识，100%类型覆盖、95%测试覆盖率和50毫秒以下p95响应时间。专长async/await模式、Pydantic验证、SQLAlchemy异步ORM以及NumPy/Pandas科学计算。"
      },
      "examples": [
        "Create async FastAPI with type hints",
        "Build data pipeline with Pandas/NumPy",
        "Implement ML model with proper typing"
      ],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "devops-engineer-subagent",
      "category": "agents",
      "tags": ["devops", "docker", "kubernetes", "ci-cd", "infrastructure", "automation"],
      "title": {
        "en": "DevOps Engineer Sub-agent",
        "zh": "DevOps工程师子代理"
      },
      "description": {
        "en": "Infrastructure and deployment automation specialist for CI/CD, containerization, and cloud orchestration",
        "zh": "基础设施和部署自动化专家，专长CI/CD、容器化和云编排"
      },
      "details": {
        "en": "Expert in Docker containerization, Kubernetes orchestration, CI/CD pipeline design, and infrastructure as code. Implements zero-downtime deployments, automated scaling, comprehensive monitoring, and disaster recovery procedures.",
        "zh": "Docker容器化、Kubernetes编排、CI/CD管道设计和基础设施即代码专家。实现零停机部署、自动扩展、全面监控和灾难恢复程序。"
      },
      "examples": [
        "Setup Kubernetes cluster with Helm",
        "Create CI/CD pipeline with GitHub Actions",
        "Implement infrastructure as code with Terraform"
      ],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "security-auditor-subagent",
      "category": "agents",
      "tags": ["security", "audit", "vulnerability", "owasp", "compliance"],
      "title": {
        "en": "Security Auditor Sub-agent",
        "zh": "安全审计子代理"
      },
      "description": {
        "en": "Security-focused code reviewer and vulnerability scanner with OWASP compliance expertise",
        "zh": "专注安全的代码审查员和漏洞扫描器，具备OWASP合规专业知识"
      },
      "details": {
        "en": "Comprehensive security audit capabilities including vulnerability scanning, threat modeling, compliance checking, and secure coding practices. Implements OWASP Top 10 protection, security headers, input validation, and authentication best practices.",
        "zh": "全面的安全审计能力，包括漏洞扫描、威胁建模、合规性检查和安全编码实践。实施OWASP十大保护、安全头、输入验证和认证最佳实践。"
      },
      "examples": [
        "Scan for SQL injection vulnerabilities",
        "Implement OWASP security headers",
        "Audit authentication system security"
      ],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "ai-engineer-subagent",
      "category": "agents",
      "tags": ["ai", "machine-learning", "models", "deployment", "data"],
      "title": {
        "en": "AI Engineer Sub-agent",
        "zh": "AI工程师子代理"
      },
      "description": {
        "en": "AI system design and deployment specialist for machine learning models and AI applications",
        "zh": "AI系统设计和部署专家，专长机器学习模型和AI应用"
      },
      "details": {
        "en": "Expert in machine learning model development, deployment, and monitoring. Specializes in model serving, MLOps pipelines, data preprocessing, model optimization, and AI system architecture. Supports TensorFlow, PyTorch, and production ML frameworks.",
        "zh": "机器学习模型开发、部署和监控专家。专长模型服务、MLOps管道、数据预处理、模型优化和AI系统架构。支持TensorFlow、PyTorch和生产ML框架。"
      },
      "examples": [
        "Deploy ML model with FastAPI",
        "Create MLOps pipeline with MLflow",
        "Optimize model for production inference"
      ],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "test-runner-subagent",
      "category": "agents",
      "tags": ["testing", "automation", "ci", "quality", "tdd"],
      "title": {
        "en": "Test Runner Sub-agent",
        "zh": "测试运行器子代理"
      },
      "description": {
        "en": "Automated testing specialist that runs test suites, diagnoses failures, and fixes issues proactively",
        "zh": "自动化测试专家，运行测试套件、诊断失败并主动修复问题"
      },
      "details": {
        "en": "Proactively monitors code changes and automatically runs relevant test suites. When tests fail, it reproduces issues, isolates root causes, and provides minimal evidence-based fixes while preserving test intent. Supports unit, integration, and end-to-end testing frameworks.",
        "zh": "主动监控代码变更并自动运行相关测试套件。当测试失败时，重现问题、隔离根本原因，并在保持测试意图的前提下提供基于证据的最小化修复。支持单元、集成和端到端测试框架。"
      },
      "examples": [
        "Run 'npm test' and fix failures",
        "Execute 'php artisan test' diagnostics",
        "Monitor CI/CD test pipeline health"
      ],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "code-reviewer-subagent",
      "category": "agents",
      "tags": ["code-review", "quality", "best-practices", "security"],
      "title": {
        "en": "Code Reviewer Sub-agent",
        "zh": "代码审查子代理"
      },
      "description": {
        "en": "Security-focused code reviewer with expertise in best practices, patterns, and vulnerability detection",
        "zh": "专注安全的代码审查员，具备最佳实践、模式和漏洞检测专业知识"
      },
      "details": {
        "en": "Comprehensive code review focusing on security vulnerabilities, code quality, maintainability, and adherence to best practices. Provides detailed feedback on architecture decisions, performance implications, and potential security risks.",
        "zh": "全面的代码审查，重点关注安全漏洞、代码质量、可维护性和最佳实践的遵循。提供关于架构决策、性能影响和潜在安全风险的详细反馈。"
      },
      "examples": [
        "Review pull request for security issues",
        "Check code for performance bottlenecks",
        "Validate architectural patterns usage"
      ],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "subagent-creation-guide",
      "category": "agents",
      "tags": ["creation", "setup", "yaml", "markdown", "configuration"],
      "title": {
        "en": "Sub-agent Creation and Setup Guide",
        "zh": "子代理创建和设置指南"
      },
      "description": {
        "en": "Complete guide for creating, configuring, and deploying custom Claude Code sub-agents",
        "zh": "创建、配置和部署自定义Claude Code子代理的完整指南"
      },
      "details": {
        "en": "Comprehensive documentation for creating custom sub-agents using Markdown files with YAML frontmatter. Covers directory setup (~/.claude/agents/ or .claude/agents/), file structure, tool permissions, model selection, and best practices for sub-agent design and deployment.",
        "zh": "使用带有YAML前置元数据的Markdown文件创建自定义子代理的全面文档。涵盖目录设置（~/.claude/agents/或.claude/agents/）、文件结构、工具权限、模型选择以及子代理设计和部署的最佳实践。"
      },
      "examples": [
        "mkdir -p ~/.claude/agents",
        "Create agent with YAML frontmatter",
        "Configure tools: Read, Write, Edit, Bash"
      ],
      "version": "2025.8",
      "status": "new"
    },
    {
      "id": "surfsense-ai-research",
      "category": "productivity",
      "tags": ["ai", "research", "knowledge-management", "browser-extension", "rag", "open-source"],
      "title": {
        "en": "SurfSense - AI Research Assistant",
        "zh": "SurfSense - AI研究助手"
      },
      "description": {
        "en": "Open source alternative to NotebookLM/Perplexity - AI research assistant with personal knowledge base integration",
        "zh": "NotebookLM/Perplexity的开源替代品 - 集成个人知识库的AI研究助手"
      },
      "details": {
        "en": "SurfSense is an open-source AI research assistant that serves as an alternative to NotebookLM, Perplexity, and Glean. Features personal knowledge management with 50+ file format support, natural language interaction, RAG architecture with vector embeddings, browser extension for webpage saving, and local LLM support with Ollama. Developed by MODSetter (Rohan Verma) at Northeastern University.",
        "zh": "SurfSense是一个开源AI研究助手，作为NotebookLM、Perplexity和Glean的替代品。特色包括支持50多种文件格式的个人知识管理、自然语言交互、带向量嵌入的RAG架构、用于网页保存的浏览器扩展，以及对Ollama本地LLM的支持。由东北大学的MODSetter（Rohan Verma）开发。"
      },
      "examples": [
        "Save authenticated webpages with browser extension",
        "Query personal documents with natural language",
        "Deploy locally with Docker and Ollama"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "openproject-management",
      "category": "development",
      "tags": ["project-management", "open-source", "collaboration", "gantt", "agile", "enterprise"],
      "title": {
        "en": "OpenProject - Open Source Project Management",
        "zh": "OpenProject - 开源项目管理"
      },
      "description": {
        "en": "Leading open source project management software with GitHub integration and enterprise features",
        "zh": "领先的开源项目管理软件，具有GitHub集成和企业功能"
      },
      "details": {
        "en": "OpenProject is the leading free and open source project management software licensed under GNU GPL v3. Features include Gantt charts, task management, agile boards, project wikis, time tracking, budgets, and extensive GitHub integration. Supports classic, agile, and hybrid project management methodologies. Available as free Community edition or paid Enterprise plans starting from €5.95/month with professional support.",
        "zh": "OpenProject是领先的免费开源项目管理软件，基于GNU GPL v3许可。功能包括甘特图、任务管理、敏捷看板、项目wiki、时间跟踪、预算和广泛的GitHub集成。支持经典、敏捷和混合项目管理方法。提供免费的社区版或从每月5.95欧元起的付费企业计划，包含专业支持。"
      },
      "examples": [
        "Link GitHub commits to work packages",
        "Create Gantt charts for project planning",
        "Setup agile boards for team collaboration"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "system-prompts-leaks",
      "category": "security",
      "tags": ["security", "ai", "prompt-injection", "vulnerability", "research", "system-prompts"],
      "title": {
        "en": "System Prompts Leaks Collection",
        "zh": "系统提示泄露集合"
      },
      "description": {
        "en": "Collection of extracted system prompts from popular AI chatbots for security research and analysis",
        "zh": "从流行AI聊天机器人中提取的系统提示集合，用于安全研究和分析"
      },
      "details": {
        "en": "Repository by asgeirtj containing extracted system prompts from ChatGPT, Claude, Gemini and other major AI services. Includes OpenAI's image safety policies, ChatGPT agent mode instructions, and over 6,500 lines of actual prompts used by AI companies. Serves as a resource for AI security research, prompt injection analysis, and understanding AI system behaviors. Part of the broader trend of AI prompt security and intellectual property concerns.",
        "zh": "由asgeirtj维护的仓库，包含从ChatGPT、Claude、Gemini和其他主要AI服务中提取的系统提示。包括OpenAI的图像安全策略、ChatGPT代理模式指令，以及AI公司使用的超过6500行实际提示。作为AI安全研究、提示注入分析和理解AI系统行为的资源。是AI提示安全和知识产权关注的更广泛趋势的一部分。"
      },
      "examples": [
        "Analyze ChatGPT system instructions",
        "Study AI safety policy implementations",
        "Research prompt injection vulnerabilities"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "wrenai-genbi",
      "category": "data",
      "tags": ["ai", "data-analytics", "sql", "business-intelligence", "text-to-sql", "open-source"],
      "title": {
        "en": "WrenAI - GenBI Platform",
        "zh": "WrenAI - GenBI平台"
      },
      "description": {
        "en": "GenBI (Generative BI) platform that queries databases with natural language and generates SQL, charts, and insights",
        "zh": "GenBI（生成式商业智能）平台，用自然语言查询数据库并生成SQL、图表和洞察"
      },
      "details": {
        "en": "WrenAI is a GenBI platform by Canner that allows querying any database in natural language, generating accurate SQL (Text-to-SQL), charts (Text-to-Chart), and AI-powered insights in seconds. Features include semantic engine with business context, support for BigQuery, PostgreSQL, MySQL, Snowflake, and 15+ other databases. Supports multiple LLMs including OpenAI, Claude, Google AI, Ollama, and AWS Bedrock. Available in open-source and commercial versions with 9.7k+ GitHub stars.",
        "zh": "WrenAI是Canner开发的GenBI平台，允许用自然语言查询任何数据库，在几秒内生成准确的SQL（文本转SQL）、图表（文本转图表）和AI驱动的洞察。功能包括具有业务上下文的语义引擎，支持BigQuery、PostgreSQL、MySQL、Snowflake和15+其他数据库。支持包括OpenAI、Claude、Google AI、Ollama和AWS Bedrock在内的多个LLM。提供开源和商业版本，GitHub星数9.7k+。"
      },
      "examples": [
        "Query database with 'Show me top customers this month'",
        "Generate SQL from natural language descriptions",
        "Create charts with 'Visualize sales by region'"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "tencent-youtu-agent",
      "category": "agents",
      "tags": ["ai", "agents", "framework", "tencent", "automation", "research", "open-source"],
      "title": {
        "en": "Tencent Youtu-agent",
        "zh": "腾讯Youtu-agent"
      },
      "description": {
        "en": "Flexible, high-performance framework for building autonomous AI agents with DeepSeek model support",
        "zh": "灵活、高性能的自主AI代理构建框架，支持DeepSeek模型"
      },
      "details": {
        "en": "Youtu-agent is a simple yet powerful agent framework from Tencent that delivers with open-source models. Achieved 71.47% on WebWalkerQA and 72.8% on GAIA using DeepSeek-V3 series models. Features out-of-the-box support for CSV analysis, literature review, file organization, and video/podcast generation. Supports SimpleAgent (single-agent) and OrchestraAgent (multi-agent) paradigms with automatic YAML config generation. Includes rich toolkits for web search, file manipulation, code execution, and document analysis.",
        "zh": "Youtu-agent是腾讯开发的简单而强大的代理框架，使用开源模型提供服务。使用DeepSeek-V3系列模型在WebWalkerQA上达到71.47%，在GAIA上达到72.8%。具备开箱即用的CSV分析、文献综述、文件整理和视频/播客生成支持。支持SimpleAgent（单代理）和OrchestraAgent（多代理）范式，具有自动YAML配置生成。包含丰富的网络搜索、文件操作、代码执行和文档分析工具包。"
      },
      "examples": [
        "Automate CSV data analysis and reporting",
        "Generate literature reviews from research papers",
        "Organize personal files with AI assistance"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "chroma-vector-db",
      "category": "integrations",
      "tags": ["vector-database", "embeddings", "ai", "search", "rag", "llm", "open-source"],
      "title": {
        "en": "Chroma Vector Database",
        "zh": "Chroma向量数据库"
      },
      "description": {
        "en": "AI-native open-source embedding database for semantic search and retrieval in AI applications",
        "zh": "面向AI的开源嵌入数据库，用于AI应用中的语义搜索和检索"
      },
      "details": {
        "en": "Chroma is the AI-native open-source embedding database that provides the fastest way to build Python or JavaScript LLM apps with memory. Features vector, full-text, regex, and metadata search capabilities. Native integration with embedding models from HuggingFace, OpenAI, Google, and more. Compatible with Langchain and LlamaIndex. Supports ephemeral in-memory operation or persistent disk storage. Scales from local development to petabyte cloud deployments with Chroma Cloud service.",
        "zh": "Chroma是AI原生的开源嵌入数据库，为构建具有记忆功能的Python或JavaScript LLM应用提供最快的方式。具备向量、全文、正则表达式和元数据搜索功能。与HuggingFace、OpenAI、Google等嵌入模型原生集成。与Langchain和LlamaIndex兼容。支持临时内存操作或持久磁盘存储。从本地开发扩展到Chroma Cloud服务的PB级云部署。"
      },
      "examples": [
        "Store and search document embeddings for RAG",
        "Build semantic search for knowledge bases",
        "Query relevant documents with natural language"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "minicpm-v-multimodal",
      "category": "ai-models",
      "tags": ["multimodal", "ai", "vision-language", "mobile", "openbmb", "efficient", "open-source"],
      "title": {
        "en": "MiniCPM-V Multimodal AI Model",
        "zh": "MiniCPM-V多模态AI模型"
      },
      "description": {
        "en": "Efficient multimodal large language model series for vision, video, and text understanding on mobile devices",
        "zh": "面向移动设备的高效多模态大语言模型系列，支持视觉、视频和文本理解"
      },
      "details": {
        "en": "MiniCPM-V is a series of efficient end-side multimodal LLMs by OpenBMB that accept images, videos and text inputs. Latest MiniCPM-V 4.5 with 8B parameters outperforms GPT-4o-latest, Gemini-2.0 Pro, and Qwen2.5-VL 72B. Features high-resolution image processing (1.8M pixels), strong OCR capabilities, real-time video understanding, and mobile device deployment. Supports multilingual capabilities in English and Chinese, with trustworthy behavior aligned via multimodal RLHF.",
        "zh": "MiniCPM-V是OpenBMB开发的高效端侧多模态大语言模型系列，支持图像、视频和文本输入。最新的MiniCPM-V 4.5具有8B参数，性能超越GPT-4o-latest、Gemini-2.0 Pro和Qwen2.5-VL 72B。特点包括高分辨率图像处理（1.8M像素）、强大的OCR功能、实时视频理解和移动设备部署。支持英文和中文的多语言能力，通过多模态RLHF实现可信行为对齐。"
      },
      "examples": [
        "Process high-resolution images with OCR on mobile",
        "Understand and analyze video content in real-time",
        "Multi-language vision-text understanding tasks"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "microsoft-qlib",
      "category": "ai-finance",
      "tags": ["ai", "quantitative-finance", "machine-learning", "microsoft", "investment", "trading", "research"],
      "title": {
        "en": "Microsoft Qlib",
        "zh": "微软Qlib"
      },
      "description": {
        "en": "AI-oriented quantitative investment platform for empowering quant research with machine learning",
        "zh": "面向AI的量化投资平台，使用机器学习赋能量化研究"
      },
      "details": {
        "en": "Qlib is Microsoft's comprehensive AI-oriented Quant investment platform that aims to use AI tech to empower Quant Research, from exploring ideas to implementing productions. Features diverse ML modeling paradigms including supervised learning, market dynamics modeling, and reinforcement learning. Contains the full ML pipeline of data processing, model training, back-testing, and covers the entire chain of quantitative investment: alpha seeking, risk modeling, portfolio optimization, and order execution. Provides high-performance time-series database and expression engine for financial data.",
        "zh": "Qlib是微软全面的面向AI的量化投资平台，旨在使用AI技术赋能量化研究，从探索想法到实施生产。具备多样化的机器学习建模范式，包括监督学习、市场动态建模和强化学习。包含完整的机器学习流水线：数据处理、模型训练、回测，覆盖整个量化投资链：Alpha挖掘、风险建模、投资组合优化和订单执行。提供高性能的时间序列数据库和金融数据表达式引擎。"
      },
      "examples": [
        "Build AI-driven trading strategies with supervised learning",
        "Perform comprehensive backtesting with risk modeling",
        "Optimize portfolio allocation using reinforcement learning"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "finrl-reinforcement-learning",
      "category": "ai-finance",
      "tags": ["reinforcement-learning", "deep-learning", "quantitative-finance", "trading", "ai4finance", "pytorch"],
      "title": {
        "en": "FinRL - Financial Reinforcement Learning",
        "zh": "FinRL - 金融强化学习"
      },
      "description": {
        "en": "First open-source framework for financial reinforcement learning with deep RL algorithms for trading",
        "zh": "首个开源金融强化学习框架，使用深度强化学习算法进行交易"
      },
      "details": {
        "en": "FinRL is the first open-source framework to demonstrate the great potential of applying deep reinforcement learning in quantitative finance. Features three-layer architecture with market environments, agents, and applications. Implements state-of-the-art DRL algorithms including DQN, DDPG, A2C, SAC, PPO, TD3 using PyTorch. Supports multi-asset trading, cryptocurrency, high-frequency trading, and portfolio allocation. Includes FinRL-Meta with hundreds of market environments and comprehensive tutorials organized in a curriculum.",
        "zh": "FinRL是首个展示深度强化学习在量化金融中巨大潜力的开源框架。具有三层架构：市场环境、代理和应用。实现最先进的深度强化学习算法，包括DQN、DDPG、A2C、SAC、PPO、TD3，使用PyTorch。支持多资产交易、加密货币、高频交易和投资组合配置。包含FinRL-Meta，提供数百个市场环境和按课程组织的综合教程。"
      },
      "examples": [
        "Train DRL agents for automated stock trading",
        "Implement portfolio allocation strategies with A2C/PPO",
        "Deploy cryptocurrency trading bots with SAC/TD3"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "bt-backtesting-framework",
      "category": "ai-finance", 
      "tags": ["backtesting", "quantitative-finance", "python", "trading", "portfolio", "algorithmic-trading"],
      "title": {
        "en": "bt - Flexible Backtesting Framework",
        "zh": "bt - 灵活回测框架"
      },
      "description": {
        "en": "Flexible Python backtesting framework for testing quantitative trading strategies with modular architecture",
        "zh": "灵活的Python回测框架，用于测试量化交易策略，具有模块化架构"
      },
      "details": {
        "en": "bt is a flexible backtesting framework for Python designed to test quantitative trading strategies. Features modular architecture with reusable Algos and AlgoStacks for rapid development of complex trading strategies. Supports tree structure for composition of sophisticated strategies, advanced trading features including commission functions, bid/offer spreads, coupon-paying instruments, and holding costs. Built on ffn library with comprehensive charting functions and statistical analysis for backtest results. Integrates seamlessly with Python's rich ecosystem for data analysis and machine learning.",
        "zh": "bt是为Python设计的灵活回测框架，用于测试量化交易策略。具有模块化架构，提供可重用的算法和算法栈，用于快速开发复杂交易策略。支持树状结构以组合复杂策略，高级交易功能包括佣金函数、买卖价差、付息工具和持仓成本。基于ffn库构建，具有全面的图表功能和回测结果统计分析。与Python丰富的数据分析和机器学习生态系统无缝集成。"
      },
      "examples": [
        "Backtest portfolio rebalancing strategies with tree structures",
        "Test complex algorithmic trading strategies with modular Algos",
        "Analyze strategy performance with comprehensive statistics"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "activepieces-workflow",
      "category": "workflow",
      "tags": ["no-code", "automation", "workflow", "open-source", "integration", "business-process"],
      "title": {
        "en": "Activepieces - No-Code Automation",
        "zh": "Activepieces - 无代码自动化"
      },
      "description": {
        "en": "Open-source no-code automation platform for building business workflows and integrations",
        "zh": "开源的无代码自动化平台，用于构建业务工作流程和集成"
      },
      "details": {
        "en": "Activepieces is an open-source no-code automation platform that enables users to create sophisticated business workflows without writing code. Features a visual flow builder with drag-and-drop interface, 100+ pre-built integrations with popular services, real-time monitoring and logging, collaborative team features, and self-hosted deployment options. Supports complex conditional logic, loops, data transformations, and webhook triggers. Ideal for automating repetitive business processes, connecting disparate systems, and building custom integrations.",
        "zh": "Activepieces是一个开源的无代码自动化平台，让用户无需编写代码就能创建复杂的业务工作流程。具有拖拽式可视化流程构建器、100多个与流行服务的预构建集成、实时监控和日志记录、协作团队功能以及自托管部署选项。支持复杂的条件逻辑、循环、数据转换和webhook触发器。适合自动化重复性业务流程、连接异构系统和构建自定义集成。"
      },
      "examples": [
        "Automate customer onboarding processes with multiple app integrations",
        "Build data synchronization workflows between CRM and marketing tools",
        "Create automated invoice processing and approval workflows"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "500-ai-agents-collection",
      "category": "agents",
      "tags": ["ai-agents", "collection", "curated", "examples", "implementations", "community"],
      "title": {
        "en": "500 AI Agents Projects Collection",
        "zh": "500个AI代理项目集合"
      },
      "description": {
        "en": "Comprehensive collection of 500+ AI agent projects with implementations and examples",
        "zh": "包含500多个AI代理项目实现和示例的综合集合"
      },
      "details": {
        "en": "A curated collection of 500+ AI agent projects showcasing diverse implementations, frameworks, and use cases. Features agents built with various technologies including LangChain, AutoGPT, CrewAI, and custom implementations. Covers multiple domains including autonomous research agents, customer service bots, code generation agents, data analysis assistants, and creative writing agents. Each project includes source code, documentation, and implementation details. Valuable resource for developers learning agent architectures, exploring different frameworks, and finding inspiration for their own AI agent projects.",
        "zh": "精心策划的500多个AI代理项目集合，展示了多样化的实现、框架和用例。包含使用各种技术构建的代理，包括LangChain、AutoGPT、CrewAI和自定义实现。涵盖多个领域，包括自主研究代理、客户服务机器人、代码生成代理、数据分析助手和创意写作代理。每个项目都包含源代码、文档和实现细节。对于学习代理架构、探索不同框架和寻找自己AI代理项目灵感的开发者来说，这是一个宝贵的资源。"
      },
      "examples": [
        "Explore autonomous research agents with web scraping capabilities",
        "Study customer service chatbot implementations with memory",
        "Learn from code generation agents with multi-language support"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "rustdesk-remote-desktop",
      "category": "tools",
      "tags": ["remote-desktop", "rust", "open-source", "cross-platform", "screen-sharing", "remote-access"],
      "title": {
        "en": "RustDesk - Open Source Remote Desktop",
        "zh": "RustDesk - 开源远程桌面"
      },
      "description": {
        "en": "Open-source remote desktop application built with Rust for secure cross-platform access",
        "zh": "使用Rust构建的开源远程桌面应用程序，提供安全的跨平台访问"
      },
      "details": {
        "en": "RustDesk is a full-featured open-source remote desktop application written in Rust. Features high-performance screen sharing with low latency, end-to-end encryption for secure connections, cross-platform support for Windows, macOS, Linux, iOS, Android, and web browsers. Supports both P2P and relay server modes, customizable connection settings, file transfer capabilities, and multi-monitor support. Self-hosted server option for complete privacy and control. Alternative to commercial solutions like TeamViewer and AnyDesk with complete source code transparency.",
        "zh": "RustDesk是一个用Rust编写的全功能开源远程桌面应用程序。具有低延迟的高性能屏幕共享、端到端加密的安全连接、支持Windows、macOS、Linux、iOS、Android和web浏览器的跨平台支持。支持P2P和中继服务器模式、可定制的连接设置、文件传输功能和多显示器支持。提供自托管服务器选项以获得完全的隐私和控制。是TeamViewer和AnyDesk等商业解决方案的替代品，具有完全的源代码透明性。"
      },
      "examples": [
        "Set up secure remote access to development workstations",
        "Deploy self-hosted relay server for team remote support",
        "Configure cross-platform screen sharing for technical demonstrations"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "copyweb-ai-tool",
      "category": "ai-tools",
      "tags": ["ai", "copywriting", "content-generation", "marketing", "automation", "web-tool"],
      "title": {
        "en": "CopyWeb.ai - AI Content Generator",
        "zh": "CopyWeb.ai - AI内容生成器"
      },
      "description": {
        "en": "AI-powered content generation platform for marketing copy, articles, and creative writing",
        "zh": "AI驱动的内容生成平台，用于营销文案、文章和创意写作"
      },
      "details": {
        "en": "CopyWeb.ai is an advanced AI content generation platform that helps businesses and creators produce high-quality marketing copy, blog articles, social media content, and creative writing. Features multiple content types including sales pages, email campaigns, product descriptions, and SEO-optimized articles. Uses advanced language models to generate engaging, conversion-focused content that resonates with target audiences. Supports multiple languages and writing styles, with customizable tone and brand voice options.",
        "zh": "CopyWeb.ai是一个先进的AI内容生成平台，帮助企业和创作者制作高质量的营销文案、博客文章、社交媒体内容和创意写作。支持多种内容类型，包括销售页面、电子邮件营销、产品描述和SEO优化文章。使用先进的语言模型生成引人入胜、以转化为重点的内容，与目标受众产生共鸣。支持多种语言和写作风格，具有可定制的语调和品牌声音选项。"
      },
      "examples": [
        "Generate compelling sales copy for product launches",
        "Create SEO-optimized blog articles and web content",
        "Develop engaging social media posts and email campaigns"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "dora-run-platform",
      "category": "development",
      "tags": ["no-code", "web-development", "design-to-code", "visual-editor", "deployment", "3d"],
      "title": {
        "en": "Dora.run - No-Code Web Development",
        "zh": "Dora.run - 无代码网页开发"
      },
      "description": {
        "en": "Advanced no-code platform for creating interactive websites with 3D animations and visual effects",
        "zh": "高级无代码平台，用于创建具有3D动画和视觉效果的交互式网站"
      },
      "details": {
        "en": "Dora.run is a revolutionary no-code web development platform that enables designers and developers to create stunning, interactive websites with advanced 3D animations and visual effects. Features a powerful visual editor with drag-and-drop components, built-in 3D rendering engine, responsive design tools, and seamless deployment capabilities. Supports complex animations, particle systems, and interactive elements without requiring coding knowledge. Perfect for creating modern landing pages, portfolios, and marketing websites with professional-grade visual appeal.",
        "zh": "Dora.run是一个革命性的无代码网页开发平台，使设计师和开发者能够创建具有高级3D动画和视觉效果的绝美交互式网站。具有强大的可视化编辑器，支持拖放组件、内置3D渲染引擎、响应式设计工具和无缝部署功能。支持复杂的动画、粒子系统和交互元素，无需编码知识。非常适合创建具有专业级视觉吸引力的现代登录页面、作品集和营销网站。"
      },
      "examples": [
        "Create interactive 3D product showcases and portfolios",
        "Build animated landing pages with stunning visual effects",
        "Design responsive websites with advanced animations"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "pocketbase-backend",
      "category": "backend",
      "tags": ["backend-as-service", "database", "real-time", "go", "sqlite", "authentication", "api"],
      "title": {
        "en": "PocketBase - Open Source Backend",
        "zh": "PocketBase - 开源后端服务"
      },
      "description": {
        "en": "Open-source backend in a single file with SQLite database, authentication, and real-time subscriptions",
        "zh": "单文件开源后端，集成SQLite数据库、身份验证和实时订阅功能"
      },
      "details": {
        "en": "PocketBase is a complete backend solution that comes as a single executable file, written in Go. Features built-in SQLite database, user authentication and authorization, real-time subscriptions, file storage, and a beautiful admin dashboard. Provides REST and GraphQL APIs out of the box, with support for custom business logic through JavaScript hooks. Perfect for rapid prototyping, small to medium projects, and applications that need a simple yet powerful backend without complex setup or maintenance.",
        "zh": "PocketBase是一个完整的后端解决方案，以单个可执行文件形式提供，用Go编写。具有内置SQLite数据库、用户身份验证和授权、实时订阅、文件存储和美观的管理面板。开箱即用地提供REST和GraphQL API，支持通过JavaScript钩子实现自定义业务逻辑。非常适合快速原型开发、中小型项目以及需要简单而强大后端且无需复杂设置或维护的应用程序。"
      },
      "examples": [
        "Build rapid MVP backends with zero configuration",
        "Create real-time applications with instant subscriptions",
        "Deploy complete backend solutions in minutes"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "ansible-automation",
      "category": "devops",
      "tags": ["automation", "configuration-management", "infrastructure", "deployment", "orchestration", "yaml"],
      "title": {
        "en": "Ansible - Infrastructure Automation",
        "zh": "Ansible - 基础设施自动化"
      },
      "description": {
        "en": "Powerful automation platform for configuration management, application deployment, and orchestration",
        "zh": "强大的自动化平台，用于配置管理、应用部署和编排"
      },
      "details": {
        "en": "Ansible is a powerful, agentless automation platform that simplifies configuration management, application deployment, and task automation. Uses simple YAML syntax to describe automation jobs in Playbooks, making it accessible to both developers and system administrators. Features include idempotent operations, parallel execution across multiple hosts, extensive module library for various platforms and services, and integration with cloud providers. Supports complex orchestration workflows, rolling deployments, and infrastructure as code practices.",
        "zh": "Ansible是一个强大的无代理自动化平台，简化配置管理、应用部署和任务自动化。使用简单的YAML语法在Playbook中描述自动化任务，使开发者和系统管理员都能轻松使用。功能包括幂等操作、跨多主机并行执行、针对各种平台和服务的广泛模块库，以及与云提供商的集成。支持复杂的编排工作流程、滚动部署和基础设施即代码实践。"
      },
      "examples": [
        "Automate server configuration and software deployment",
        "Orchestrate complex multi-tier application rollouts",
        "Manage cloud infrastructure and scaling operations"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "ccpm-project-manager",
      "category": "tools",
      "tags": ["project-management", "critical-chain", "scheduling", "resource-management", "automation", "productivity"],
      "title": {
        "en": "CCPM - Critical Chain Project Management",
        "zh": "CCPM - 关键链项目管理"
      },
      "description": {
        "en": "Advanced project management tool implementing Critical Chain Project Management methodology",
        "zh": "实现关键链项目管理方法论的高级项目管理工具"
      },
      "details": {
        "en": "CCPM (Critical Chain Project Management) is an advanced project management tool that implements the Theory of Constraints methodology for project scheduling and resource management. Features intelligent resource leveling, buffer management, multi-project coordination, and real-time progress tracking. Uses critical chain methodology to identify and manage project bottlenecks, reduce project duration, and improve delivery reliability. Includes advanced analytics, reporting capabilities, and integration with popular development tools for seamless workflow management.",
        "zh": "CCPM（关键链项目管理）是一个高级项目管理工具，实现了约束理论方法论进行项目调度和资源管理。具有智能资源平衡、缓冲管理、多项目协调和实时进度跟踪功能。使用关键链方法论来识别和管理项目瓶颈、缩短项目持续时间并提高交付可靠性。包括高级分析、报告功能以及与流行开发工具的集成，实现无缝的工作流管理。"
      },
      "examples": [
        "Optimize multi-project resource allocation and scheduling",
        "Implement critical chain methodology for faster delivery",
        "Track project buffers and identify potential delays"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "bmad-method",
      "category": "developer-tools",
      "tags": ["physics", "particle-accelerator", "simulation", "research", "scientific"],
      "title": {
        "en": "BMAD-METHOD - Particle Accelerator Simulation",
        "zh": "BMAD-METHOD - 粒子加速器仿真"
      },
      "description": {
        "en": "Advanced particle accelerator physics simulation library and toolkit",
        "zh": "高级粒子加速器物理仿真库和工具包"
      },
      "details": {
        "en": "BMAD-METHOD is a comprehensive library for simulating particle accelerator physics, providing tools for beam dynamics, lattice design, and accelerator optimization. Features include advanced tracking algorithms, multi-particle simulations, lattice element modeling, and integration with popular physics simulation frameworks. Used by research institutions worldwide for designing and optimizing particle accelerators, studying beam dynamics, and developing new accelerator technologies.",
        "zh": "BMAD-METHOD是一个全面的粒子加速器物理仿真库，提供束流动力学、晶格设计和加速器优化工具。功能包括高级跟踪算法、多粒子仿真、晶格元素建模以及与流行物理仿真框架的集成。被全球研究机构用于设计和优化粒子加速器、研究束流动力学和开发新的加速器技术。"
      },
      "examples": [
        "Simulate particle beam dynamics in accelerator lattices",
        "Optimize accelerator performance and beam quality",
        "Design new particle accelerator configurations"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "weknora",
      "category": "ai-tools",
      "tags": ["knowledge-management", "ai", "research", "collaboration", "productivity"],
      "title": {
        "en": "Weknora - AI Knowledge Management",
        "zh": "Weknora - AI知识管理"
      },
      "description": {
        "en": "AI-powered knowledge management and research collaboration platform",
        "zh": "AI驱动的知识管理和研究协作平台"
      },
      "details": {
        "en": "Weknora is an intelligent knowledge management platform that leverages AI to help teams organize, discover, and collaborate on research and information. Features include smart content categorization, AI-powered search and recommendations, collaborative annotation tools, and automated knowledge extraction from documents. Perfect for research teams, academic institutions, and organizations that need to manage large amounts of information efficiently.",
        "zh": "Weknora是一个智能知识管理平台，利用AI帮助团队组织、发现和协作研究信息。功能包括智能内容分类、AI驱动的搜索和推荐、协作注释工具以及从文档中自动提取知识。非常适合研究团队、学术机构和需要高效管理大量信息的组织。"
      },
      "examples": [
        "Organize and categorize research documents with AI",
        "Collaborate on knowledge projects with team members",
        "Extract insights from large document collections"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "magentic-ui",
      "category": "design-tools",
      "tags": ["ui", "microsoft", "design-system", "components", "figma"],
      "title": {
        "en": "Microsoft Magentic UI",
        "zh": "微软Magentic UI"
      },
      "description": {
        "en": "Microsoft's advanced UI design system and component library",
        "zh": "微软的高级UI设计系统和组件库"
      },
      "details": {
        "en": "Microsoft Magentic UI is a comprehensive design system and component library that provides developers and designers with a consistent set of UI components, patterns, and guidelines. Features include modern design tokens, accessibility-first components, responsive design patterns, and seamless integration with Microsoft's design language. Supports multiple frameworks and platforms, with extensive documentation and design resources for Figma and other design tools.",
        "zh": "微软Magentic UI是一个全面的设计系统和组件库，为开发者和设计师提供一致的UI组件、模式和指南。功能包括现代设计令牌、无障碍优先组件、响应式设计模式以及与微软设计语言的无缝集成。支持多个框架和平台，为Figma和其他设计工具提供广泛的文档和设计资源。"
      },
      "examples": [
        "Build consistent UIs with Microsoft design language",
        "Implement accessible components and patterns",
        "Create responsive designs with design tokens"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "gemini-fullstack-langgraph",
      "category": "ai-tools",
      "tags": ["google", "gemini", "fullstack", "langgraph", "quickstart", "ai"],
      "title": {
        "en": "Google Gemini Fullstack LangGraph Quickstart",
        "zh": "Google Gemini全栈LangGraph快速入门"
      },
      "description": {
        "en": "Google's quickstart template for building fullstack applications with Gemini and LangGraph",
        "zh": "Google构建Gemini和LangGraph全栈应用的快速入门模板"
      },
      "details": {
        "en": "This is Google's official quickstart template for building full-stack applications using Gemini AI models and LangGraph framework. Features include pre-configured project structure, best practices for Gemini integration, LangGraph workflow examples, and production-ready deployment configurations. Perfect for developers who want to quickly start building AI-powered applications with Google's latest technologies.",
        "zh": "这是Google使用Gemini AI模型和LangGraph框架构建全栈应用程序的官方快速入门模板。功能包括预配置的项目结构、Gemini集成最佳实践、LangGraph工作流示例和生产就绪的部署配置。非常适合想要快速开始使用Google最新技术构建AI驱动应用程序的开发者。"
      },
      "examples": [
        "Bootstrap fullstack AI applications with Gemini",
        "Implement LangGraph workflows in production",
        "Deploy AI applications with Google Cloud"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "stirling-pdf",
      "category": "document-processing",
      "tags": ["pdf", "document", "processing", "web", "tools", "open-source"],
      "title": {
        "en": "Stirling-PDF - Comprehensive PDF Toolkit",
        "zh": "Stirling-PDF - 综合PDF工具包"
      },
      "description": {
        "en": "Comprehensive web-based PDF manipulation toolkit with 50+ features",
        "zh": "具有50多种功能的综合网络PDF操作工具包"
      },
      "details": {
        "en": "Stirling-PDF is a powerful, locally-hosted web application that provides comprehensive PDF manipulation capabilities. Features include PDF merging, splitting, compression, OCR, watermarking, encryption, form filling, and conversion to various formats. Runs entirely locally for privacy and security, with no external dependencies or cloud services required. Supports batch operations, custom configurations, and extensive file format support beyond PDF.",
        "zh": "Stirling-PDF是一个强大的本地托管网络应用程序，提供全面的PDF操作功能。功能包括PDF合并、拆分、压缩、OCR、水印、加密、表单填写以及转换为各种格式。完全在本地运行以保护隐私和安全，无需外部依赖或云服务。支持批量操作、自定义配置以及PDF之外的广泛文件格式支持。"
      },
      "examples": [
        "Merge and split PDF documents locally",
        "Add OCR to scanned documents",
        "Compress and optimize PDF files"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "parlant",
      "category": "ai-tools",
      "tags": ["ai", "conversation", "nlp", "chatbot", "dialogue"],
      "title": {
        "en": "Parlant - Conversational AI Framework",
        "zh": "Parlant - 对话AI框架"
      },
      "description": {
        "en": "Advanced conversational AI framework for building sophisticated dialogue systems",
        "zh": "用于构建复杂对话系统的高级对话AI框架"
      },
      "details": {
        "en": "Parlant is a sophisticated conversational AI framework designed for building advanced dialogue systems and chatbots. Features include natural language understanding, context management, multi-turn conversation handling, and integration with various AI models. Supports complex conversation flows, entity extraction, intent recognition, and customizable response generation. Perfect for building customer service bots, virtual assistants, and interactive AI applications.",
        "zh": "Parlant是一个复杂的对话AI框架，专为构建高级对话系统和聊天机器人而设计。功能包括自然语言理解、上下文管理、多轮对话处理以及与各种AI模型的集成。支持复杂的对话流程、实体提取、意图识别和可定制的响应生成。非常适合构建客户服务机器人、虚拟助手和交互式AI应用程序。"
      },
      "examples": [
        "Build sophisticated chatbots with context awareness",
        "Implement multi-turn conversation systems",
        "Create virtual assistants with NLU capabilities"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "kotaemon",
      "category": "ai-tools",
      "tags": ["ai", "knowledge", "management", "rag", "document", "qa"],
      "title": {
        "en": "Kotaemon - Document Q&A System",
        "zh": "Kotaemon - 文档问答系统"
      },
      "description": {
        "en": "Advanced RAG-based document question-answering system with multi-modal support",
        "zh": "基于RAG的高级文档问答系统，支持多模态"
      },
      "details": {
        "en": "Kotaemon is an advanced document question-answering system that uses RAG (Retrieval-Augmented Generation) technology to provide accurate answers from document collections. Features include multi-modal document support (text, images, tables), intelligent chunking strategies, vector search capabilities, and support for various LLM models. Perfect for organizations that need to extract knowledge from large document repositories, technical documentation, or research papers.",
        "zh": "Kotaemon是一个高级文档问答系统，使用RAG（检索增强生成）技术从文档集合中提供准确答案。功能包括多模态文档支持（文本、图像、表格）、智能分块策略、向量搜索功能以及对各种LLM模型的支持。非常适合需要从大型文档存储库、技术文档或研究论文中提取知识的组织。"
      },
      "examples": [
        "Extract answers from technical documentation",
        "Query multi-modal document collections",
        "Build knowledge bases from research papers"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "maxkb",
      "category": "ai-tools",
      "tags": ["knowledge-base", "ai", "enterprise", "rag", "chinese"],
      "title": {
        "en": "MaxKB - Enterprise Knowledge Base",
        "zh": "MaxKB - 企业知识库"
      },
      "description": {
        "en": "Enterprise-grade AI knowledge base system with RAG capabilities",
        "zh": "具有RAG功能的企业级AI知识库系统"
      },
      "details": {
        "en": "MaxKB is an enterprise-grade knowledge base system that combines traditional knowledge management with modern AI capabilities. Features include intelligent document processing, RAG-based question answering, multi-tenant support, and integration with enterprise systems. Supports various document formats, provides advanced search capabilities, and offers customizable AI models for different use cases. Designed for large organizations that need scalable knowledge management solutions.",
        "zh": "MaxKB是一个企业级知识库系统，将传统知识管理与现代AI功能相结合。功能包括智能文档处理、基于RAG的问答、多租户支持以及与企业系统的集成。支持各种文档格式，提供高级搜索功能，并为不同用例提供可定制的AI模型。专为需要可扩展知识管理解决方案的大型组织而设计。"
      },
      "examples": [
        "Build enterprise knowledge repositories with AI",
        "Implement intelligent document search and retrieval",
        "Create AI-powered help desk systems"
      ],
      "version": "2025.1",
      "status": "new"
    },
    {
      "id": "n8n-workflows-collection",
      "category": "automation",
      "tags": ["n8n", "workflows", "automation", "templates", "integration"],
      "title": {
        "en": "n8n Workflows Collection",
        "zh": "n8n工作流程集合"
      },
      "description": {
        "en": "Curated collection of production-ready n8n workflow templates",
        "zh": "精选的生产就绪n8n工作流程模板集合"
      },
      "details": {
        "en": "A comprehensive collection of production-ready n8n workflow templates covering various automation scenarios and integrations. Features include workflows for social media automation, data synchronization, email marketing, customer support, e-commerce automation, and API integrations. Each workflow is thoroughly tested, documented, and optimized for performance. Perfect for businesses looking to automate repetitive tasks and integrate multiple services without coding.",
        "zh": "一个全面的生产就绪n8n工作流程模板集合，涵盖各种自动化场景和集成。功能包括社交媒体自动化、数据同步、电子邮件营销、客户支持、电子商务自动化和API集成的工作流程。每个工作流程都经过彻底测试、记录和性能优化。非常适合希望自动化重复性任务并在不编码的情况下集成多个服务的企业。"
      },
      "examples": [
        "Automate social media posting across platforms",
        "Sync data between CRM and marketing tools",
        "Create customer support automation workflows"
      ],
      "version": "2025.1",
      "status": "new"
    }
  ]
}